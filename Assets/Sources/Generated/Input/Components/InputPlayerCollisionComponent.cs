//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class InputEntity {

    public Sources.Components.PlayerCollisionComponent playerCollision { get { return (Sources.Components.PlayerCollisionComponent)GetComponent(InputComponentsLookup.PlayerCollision); } }
    public bool hasPlayerCollision { get { return HasComponent(InputComponentsLookup.PlayerCollision); } }

    public void AddPlayerCollision(UnityEngine.GameObject newSelf, UnityEngine.GameObject newOther) {
        var index = InputComponentsLookup.PlayerCollision;
        var component = CreateComponent<Sources.Components.PlayerCollisionComponent>(index);
        component.self = newSelf;
        component.other = newOther;
        AddComponent(index, component);
    }

    public void ReplacePlayerCollision(UnityEngine.GameObject newSelf, UnityEngine.GameObject newOther) {
        var index = InputComponentsLookup.PlayerCollision;
        var component = CreateComponent<Sources.Components.PlayerCollisionComponent>(index);
        component.self = newSelf;
        component.other = newOther;
        ReplaceComponent(index, component);
    }

    public void RemovePlayerCollision() {
        RemoveComponent(InputComponentsLookup.PlayerCollision);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class InputMatcher {

    static Entitas.IMatcher<InputEntity> _matcherPlayerCollision;

    public static Entitas.IMatcher<InputEntity> PlayerCollision {
        get {
            if (_matcherPlayerCollision == null) {
                var matcher = (Entitas.Matcher<InputEntity>)Entitas.Matcher<InputEntity>.AllOf(InputComponentsLookup.PlayerCollision);
                matcher.componentNames = InputComponentsLookup.componentNames;
                _matcherPlayerCollision = matcher;
            }

            return _matcherPlayerCollision;
        }
    }
}
